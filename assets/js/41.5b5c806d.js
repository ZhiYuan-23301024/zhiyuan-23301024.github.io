(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{574:function(t,s,v){"use strict";v.r(s);var _=v(2),n=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("堆内存是不得已而为之，专门给全局多线程访问的对象做的存储区域，配有更完善的管理算法，因此耗时，而如果一个对象只在某方法内，那么其实没必要放堆内存里？JVM会通过逃逸分析尽可能实现栈分配，以此实现更高效率的内存读取？")]),t._v(" "),s("h2",{attrs:{id:"ds原话如下"}},[t._v("ds原话如下")]),t._v(" "),s("h3",{attrs:{id:"一、栈与堆的本质差异"}},[t._v("一、栈与堆的本质差异")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("特性")])]),t._v(" "),s("th",[s("strong",[t._v("栈内存")])]),t._v(" "),s("th",[s("strong",[t._v("堆内存")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("分配速度")])]),t._v(" "),s("td",[t._v("极快（移动栈指针即可）")]),t._v(" "),s("td",[t._v("较慢（需内存分配算法+可能触发GC）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("释放方式")])]),t._v(" "),s("td",[t._v("自动（方法结束栈帧弹出）")]),t._v(" "),s("td",[t._v("依赖GC回收（STW停顿风险）")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("内存局部性")])]),t._v(" "),s("td",[t._v("与CPU缓存行高度契合")]),t._v(" "),s("td",[t._v("对象分散存储，缓存命中率低")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("并发安全")])]),t._v(" "),s("td",[t._v("线程私有（无需同步）")]),t._v(" "),s("td",[t._v("需考虑多线程访问冲突")])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"二、为何-栈代堆-是高效选择"}},[t._v("二、为何“栈代堆”是高效选择？")]),t._v(" "),s("h4",{attrs:{id:"_1-性能数量级差异"}},[t._v("1. "),s("strong",[t._v("性能数量级差异")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("栈分配")]),t._v("：约1~3个CPU周期（直接修改栈指针）")]),t._v(" "),s("li",[s("strong",[t._v("堆分配")]),t._v("：\n"),s("ul",[s("li",[t._v("普通对象：100~1000周期（内存分配+初始化）")]),t._v(" "),s("li",[t._v("触发GC时：可能达毫秒级停顿（如Young GC）")])])])]),t._v(" "),s("p",[s("em",[t._v("类比")]),t._v("：栈分配像在桌面取便签纸，堆分配像去仓库找箱子再贴标签。")]),t._v(" "),s("h4",{attrs:{id:"_2-gc成本规避"}},[t._v("2. "),s("strong",[t._v("GC成本规避")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("堆对象")]),t._v("：\n"),s("ul",[s("li",[t._v("占用Young区空间 → 增加Minor GC频率")]),t._v(" "),s("li",[t._v("晋升到Old区 → 增加Major GC风险")])])]),t._v(" "),s("li",[s("strong",[t._v("栈变量")]),t._v("：随方法结束自动消失，"),s("strong",[t._v("零GC负担")])])]),t._v(" "),s("h4",{attrs:{id:"_3-硬件友好性"}},[t._v("3. "),s("strong",[t._v("硬件友好性")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("CPU缓存命中")]),t._v("：栈帧通常位于L1/L2缓存，而堆对象可能引发缓存行失效。")]),t._v(" "),s("li",[s("strong",[t._v("预取优化")]),t._v("：顺序栈帧访问可触发CPU硬件预取机制。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"三、实际场景收益分析"}},[t._v("三、实际场景收益分析")]),t._v(" "),s("h4",{attrs:{id:"案例-高频创建临时对象"}},[t._v("案例：高频创建临时对象")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("processOrder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Order")]),t._v(" order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 临时计算对象（未逃逸）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),t._v(" calc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriceCalculator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" calc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("堆分配")]),t._v("：\n"),s("ul",[s("li",[t._v("每次调用创建新对象 → 1万次调用产生1万次堆分配 + 可能触发GC")])])]),t._v(" "),s("li",[s("strong",[t._v("标量替换后")]),t._v("：\n"),s("ul",[s("li",[t._v("字段转为栈变量 → "),s("strong",[t._v("零堆分配")]),t._v(" + "),s("strong",[t._v("零GC影响")])])])])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"四、栈内存的-可控溢出-保障"}},[t._v("四、栈内存的“可控溢出”保障")]),t._v(" "),s("h4",{attrs:{id:"_1-栈深度保护机制"}},[t._v("1. "),s("strong",[t._v("栈深度保护机制")])]),t._v(" "),s("ul",[s("li",[t._v("JVM通过"),s("code",[t._v("-Xss")]),t._v("参数控制栈大小（默认1MB），栈溢出会立即抛出"),s("code",[t._v("StackOverflowError")]),t._v("，而堆内存耗尽可能引发复杂GC问题。")])]),t._v(" "),s("h4",{attrs:{id:"_2-栈内存的弹性代价"}},[t._v("2. "),s("strong",[t._v("栈内存的弹性代价")])]),t._v(" "),s("ul",[s("li",[t._v("栈帧弹出后内存立即复用，而堆内存GC后仍可能产生碎片。")])]),t._v(" "),s("h4",{attrs:{id:"_3-空间换时间的哲学"}},[t._v("3. "),s("strong",[t._v("空间换时间的哲学")])]),t._v(" "),s("ul",[s("li",[t._v("栈内存虽有限，但通过"),s("strong",[t._v("作用域严格限制")]),t._v("（仅存活于方法内），确保资源高效周转。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"五、底层硬件视角"}},[t._v("五、底层硬件视角")]),t._v(" "),s("p",[t._v("现代CPU的"),s("strong",[t._v("寄存器-缓存-内存")]),t._v("层次结构中：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("栈帧")]),t._v("更可能被优化到寄存器和L1缓存（因访问模式线性可预测）。")]),t._v(" "),s("li",[s("strong",[t._v("堆对象")]),t._v("因地址随机性，容易引发缓存未命中（Cache Miss），导致CPU流水线停滞。")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"六、总结-意义的三重维度"}},[t._v("六、总结：意义的三重维度")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("性能维度")]),t._v("：用纳秒级栈操作替代微秒级堆操作，规避毫秒级GC停顿。")]),t._v(" "),s("li",[s("strong",[t._v("系统维度")]),t._v("：降低整体内存子系统压力，提升吞吐量。")]),t._v(" "),s("li",[s("strong",[t._v("硬件维度")]),t._v("：契合现代CPU缓存架构，最大化硬件效能。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);